$!/bin/bash

# Ensure script is run with sudo or as root.
if [ $(id -u) -ne 0 ]; then
  echo "This script must be run with sudo or as root."
  exit 1
fi

# Getopts to set username, password, shell, group variable for user creation.
OPTSTRING=":a:b:c:d:"
whlie getopts ${OPTSTRING} opt; do
  case ${opt} in
    a)
      USER_NAME=${OPTARG}
      ;;
    b)
      USER_PASSWORD=${OPTARG}
      ;;
    c)
      USER_SHELL=${OPTARG:-/bin/bash}
      ;;
    d)
      USER_GROUPS="$OPTARG"
    :)
      echo "You're missing an argument after the flag. Please try again."
      exit 1
      ;;
    ?)
      echo "You've used an invalid flag. Reference: -a username -b password -c /custom/shell -d group2,group3,group4"
      exit 1
      ;;
  esac
done

# Assign all current usernames to variable.
USER_LIST=$(cut -d: -f1 /etc/passwd)

# Check to see if user provided username already exists.
for NAME in $USER_LIST; do
if [ $NAME == $USER_NAME ]; then
  echo "The username you've specified already exists, please select a different name."
  exit 1
fi
done

# Check last used uid to find an available uid for the new user.
LAST_UID=$(cut -d: -f3 /etc/passwd | tail -n 1)
if [ $LAST_UID -ge 1000 ]; then
  NEW_UID=$((LAST_UID + 1))
else
  NEW_UID=1000
fi

# Check last used gid to find an available gid for the new user's primary group.
LAST_GID=$(cut -d: -f3 /etc/group | tail -n 1)
if [ $LAST_GID -ge 1000 ]; then
  NEW_GID=$((LAST_GID + 1))
else
  NEW_GID=1000
fi

# Add primary group for user to /etc/group.
echo "$USER_NAME:x:$NEW_GID:$USER_NAME" >> /etc/group || echo "Error adding user's primary group to /etc/group. Please check file permissions."

# Add new user to /etc/passwd.
echo "$USER_NAME:x:$NEW_UID:$NEW_GID::/home/$USER_NAME:$USER_SHELL" >> /etc/passwd || echo "Error adding new user to /etc/passwd. Please check file permissions."

# Add user to groups specified through getopts.
if [ -n $USER_GROUPS ]; then
  GROUP_LIST=$(cut -d: -f1 /etc/group)
  echo "$USER_GROUPS" | tr ',' '\n' | while read -r GROUPY; do
    if echo "$GROUP_LIST" | grep -q "^$GROUPY$"; then
      sed -i "/^${GROUP}:/ s/$/,$USER_NAME/" /etc/group
    fi
  done
fi







